============================
KookaBlockly Reference Guide
============================

A KookaBlockly script is assembled from graphical function blocks dragged onto the workspace from the palette of blocks on the left of the display.  The blocks click together like pieces of a jigsaw puzzle to form a series of steps that the Kookaberry microcomputer will perform.

.. figure:: images/kblockly-welcome-script.png
   :width: 80%
   :align: center
   :alt: KookaBlockly Canvas

   This is the KookaBlockly display with an example KookaBlockly script. 

The example shown above shows a loop that writes a welcome message on the Kookaberry display and flashes the Kookaberry's LEDs.  It then sleeps for 2 seconds and then goes back to the beginning of the loop.  The loop will run until the Kookaberry is reset or power is removed.

This reference guide provides a reference for using KookaBlockly and for each of the blocks in the palette of KookaBlockly block categories.

Using the KookaBlockly Application
==================================

The KookaBlockly application is available to run on the Microsoft Windows (10 and up), the Apple MacOS, and Raspberry Pi operating systems.

The application window has numerous controls, as are described below:

1. At the top-left of the window, a set of buttons with which KookaBlockly scripts may be created, loaded, saved, run and stopped.


.. image:: images/script-control-buttons.png
   :width: 500
   :align: center

+-------+-------------------------------------------------------------------------------------------------------------------+
|New    |Empty the workspace to start a new script. If the current contents have not been saved then a save prompt is given.|
+-------+-------------------------------------------------------------------------------------------------------------------+
|Load   |Load a script from a file appending it to the current script.                                                      |
+-------+-------------------------------------------------------------------------------------------------------------------+
|Save   |Save the cuurently named script to the corresponding file.                                                         |
+-------+-------------------------------------------------------------------------------------------------------------------+
|Save As|Save the current script to a new file within a selected folder.                                                    |
+-------+-------------------------------------------------------------------------------------------------------------------+
|Print  |Print the current script.                                                                                          |
+-------+-------------------------------------------------------------------------------------------------------------------+
|Run    |Transfer the current script to the tethered Kookaberry and run it on the Kookaberry.                               |
+-------+-------------------------------------------------------------------------------------------------------------------+
|Stop   |Terminate the script currently running on the Kookaberry.                                                          |
+-------+-------------------------------------------------------------------------------------------------------------------+

2. At the top-right of the window, the "Show display" button which will open a window on which the attached Kookaberry is shown in virtual form.  This includes the Kookaberry's display, LEDs, and clickable buttons.


.. image:: images/show-script-display-buttons.png
   :width: 150
   :align: center



3. Second to the top-right is the "Show script" button which opens a window in which the MicroPython script generated by the loaded KookaBlockly script is displayed.  This script cannot be edited within this window.

4. At the top-centre is the "Serial" drop-down box which shows which serial USB ports are available and which connected to a tethered Kookaberry.


.. image:: images/serial-dropdown.png
   :width: 300
   :align: center



5. Below the "Serial" box are two drop-down boxes.  The left one contains a list of folders in the "Kookaberry Scripts / KookaBlockly" folder.  The right box contains a list of KookaBlockly scripts within the folder selected in the left-hand box.  Together these allow the selection and loading of any pre-existing KookBlockly script in the KookaBlockly folder and sub-folders.


.. image:: images/scripts-dropdowns.png
   :width: 300
   :align: center



6. Down the left of the window is a vertically-oriented list of the KookaBlockly pallete categories. Click on any category to reveal the pallete of blocks, click on and drag the desired block to the workspace, position it and release to drop the block in place.


.. image:: images/blocks-palette.png
   :width: 100
   :align: center



7. In the centre of the window is the KookaBlockly workspace.  Blocks can be dragged into this space, repositioned, resized and deleted by using the mouse or trackpad.

8. At the bottom-right of the window is a set of icons for centering the KookaBlockly script, for zooming in and out, and a Trash symbol for retrieving blocks that were deleted during the current editing session.  There are also horizontal and vertical scrollbars for positioning the KookaBlockly workspace within the window.


.. image:: images/workspace-zoom-trash-scrollbars.png
   :width: 400
   :align: center


 

KookaBlockly Conventions
========================

KookaBlockly provides an extensive palette of blocks to assemble into scripts.  The block palette is on the left of the display organised into functionally related categories.  

Clicking on a category, for example the Control category, reveals the blocks available within that category.  To use the block, click on it and drag it onto the KookaBlockly workspace and release, and/or drag it into position until it snaps onto an adjacent block. Any block in the workspace can be clicked on and dragged into position.

KookaBlockly contains three basic block shapes:

1.	A C-shaped block directs program flow and contains a sequence of action blocks.  The C-shaped block may be a loop, or may be a sequence of blocks that are run conditionally subject to one or more logical tests.

.. image:: images/every-loop-if-do.png
   :width: 300
   :align: center


2.	An action or “do” block which performs an operation.  The block has an indent in the top border and a matching protrusion on the bottom border.  These blocks click together like jigsaw pieces and may be placed in a vertical column and within a C-shaped block.

.. image:: images/display-clear.png
   :width: 200
   :align: center


3.	A value block which has a jigsaw tab on the left-hand edge.  These blocks evaluate an expression and assign an output value to the blocks to which they are connected.  Some value blocks have a matching receptacle on the right-hand edge which accepts other value blocks.

.. image:: images/math-number-squareroot.png
   :width: 300
   :align: center


Some blocks have configuration options denoted by a cog symbol.  Clicking on the cog symbol presents options that may be used to configure the block.

.. image:: images/if-do-config.png
   :width: 200
   :align: center


Right-clicking on a block also presents a set of option as below.  These include: duplicate the current block; add a comment; collapse the block into a compact presentation or expand a collapsed block; disable or enable a block; remove the block from the program; or display some Help text about the block (if the Help text has been provided).

.. image:: images/if-do-rightclick.png
   :width: 150
   :align: center


Deleted blocks are placed in the Trash whose symbol is on the bottom right of the workspace.  Clicking on the Trash icon opens the lid and displays the deleted items.  Any deleted item may be dragged back into the workspace to become part of the program.  Clicking on a blank area of the workspace closes the Trash.
